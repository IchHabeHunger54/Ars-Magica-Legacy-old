buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "Minecraftschurli maven"
        url "http://minecraftschurli.ddns.net/archiva/repository/internal/"
    }
}

apply plugin: 'idea'

version = "${mc_version}-${modVersion}"
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    api
    main {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
    }
}

configurations {
    apiCompile.extendsFrom(compile)
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.mods.toml
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: "${mcp_mappings}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"
            // environment 'MOD_CLASSES', "${project.file("build/resources").canonicalPath};${project.file("build/classes").canonicalPath}"
            mods {
                arsmagicalegacy {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            mods {
                arsmagicalegacy {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', modBaseName, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            ideaModule "${project.name}.main"

            mods {
                arsmagicalegacy {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    compile fg.deobf("minecraftschurli:simpleorelib:${mc_version}-1.0.0.0")
}

jar {
    from sourceSets.main.output.classesDirs
    from sourceSets.api.output.classesDirs
    from sourceSets.main.output.resourcesDir
    from sourceSets.api.output.resourcesDir

    manifest {
        attributes([
                "Specification-Title": "${mod_name}",
                "Specification-Vendor": "${modGroup}",
                "Specification-Version": "${mc_version}",
                "Implementation-Title": project.name,
                "Implementation-Version": "${modVersion}",
                "Implementation-Vendor" :"${modGroup}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allJava
    from sourceSets.api.allJava
}

task apiJar(type: Jar) {
    classifier = "api"
    from sourceSets.api.output

    // TODO: when FG bug is fixed, remove allJava from the api jar.
    // https://github.com/MinecraftForge/ForgeGradle/issues/369
    // Gradle should be able to pull them from the -sources jar.
    from sourceSets.api.allJava
}

artifacts {
    archives javadocJar
    archives sourcesJar
    archives apiJar
}

task("uploadJars", dependsOn: "build") {
    description = "uploads JARs"
    apply plugin: "maven"
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "http://minecraftschurli.ddns.net/archiva/repository/internal/"){
                    authentication(userName: mcs_maven_user, password: mcs_maven_pass)
                }
            }
        }
    }
}
